# Environment variables {
  # Path to dotfiles repo
  export DOTFILES="$HOME/.dotfiles"
  export LC_CTYPE="en_US.UTF-8"
  # Error running npm in WSL2: https://stackoverflow.com/questions/39311147/cannot-run-npm-commands
  #export PATH=$(echo "$PATH" | sed -e 's/:\/mnt[^:]*//g') # strip out problematic Windows %PATH%
# }


# Pyenv
eval "$(pyenv init -)"

# homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"


# Include timestamps in history
setopt EXTENDED_HISTORY

# Functions {
    # Search zsh history
    histsearch() { fc -lim "*$@*" 1 }
# }

# oh-my-zsh {
  # Prevent loading https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/compfix.zsh
  # since it slows down the prompt considerably
  ZSH_DISABLE_COMPFIX=true

  # Path to your oh-my-zsh configuration
  ZSH="$HOME/.oh-my-zsh"


  # Set name of the theme to load.
  # Look in ~/.oh-my-zsh/themes/
  # Optionally, if you set this to "random", it'll load a random theme each
  # time that oh-my-zsh is loaded.
  ZSH_THEME="agnoster"

  # Example aliases
  # alias zshconfig="mate ~/.zshrc"
  # alias ohmyzsh="mate ~/.oh-my-zsh"

  # Set to this to use case-sensitive completion
  # CASE_SENSITIVE="true"

  # Comment this out to disable bi-weekly auto-update checks
  # DISABLE_AUTO_UPDATE="true"

  # Uncomment to change how many often would you like to wait before
  # auto-updates occur? (in days)
  export UPDATE_ZSH_DAYS=13

  # Uncomment following line if you want to disable colors in ls
  # DISABLE_LS_COLORS="true"

  # Uncomment following line if you want to disable autosetting terminal
  # title.
  # DISABLE_AUTO_TITLE="true"

  # Uncomment following line if you want red dots to be displayed while
  # waiting for completion
  COMPLETION_WAITING_DOTS="true"

  # Which plugins would you like to load? (plugins can be found in
  # ~/.oh-my-zsh/plugins/*)
  # Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
  # Example format: plugins=(rails git textmate ruby lighthouse)
  plugins=(
    pyenv python git github
  )

  source "$ZSH/oh-my-zsh.sh"
# }


# aliases {
  alias t="tmux attach || tmux"
  alias jupids="ps -ef | grep jupyter-lab"
  alias setclock="sudo hwclock --hctosys"
  # when in wsl on windows, bleh
  # alias code="/mnt/c/Users/mmeehan/AppData/Local/Programs/Microsoft\ VS\ Code/Code.exe"
  alias ecrlogin="aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 050247294295.dkr.ecr.us-east-1.amazonaws.com"
  alias ecrlogin-sudo="aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 050247294295.dkr.ecr.us-east-1.amazonaws.com"
# }

# IP address detection
#  if [ -z "$IP_ADDRESS" ]; then
#    public_ip="$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4 | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
#    private_ip="$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4 | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
#    if [ ".$public_ip" != "." ]; then
#      IP_ADDRESS=$public_ip;
#    else
#      IP_ADDRESS=$private_ip;
#    fi;
#    export IP_ADDRESS
#  fi

#  alias launch_jupyter="rm -f .nohup.out ; touch .nohup.out ; ( nohup jupyter lab --NotebookApp.token='' --no-browser --ip='0.0.0.0' >> .nohup.out 2>&1 & ) ; \
#                       ( tail -Fn0 .nohup.out & ) | grep -om1 '[[:space:]]\{1,\}http.*' | sed -e \"s|ip[0-9-]*|\$IP_ADDRESS|\""
# }


 # dircolors {
 #   autoload colors;
 #   # Find the option for using colors in ls, depending on the version
 #   ls --color -d . &>/dev/null 2>&1 && alias ls='ls --color=auto -F' || alias ls='ls -GF'
 #   # Use dircolors if available
 #   dircolors &>/dev/null 2>&1 && eval `dircolors $DOTFILES/zsh/dircolors.ansi-dark` || export LSCOLORS="Gxfxcxdxbxegedabagacad"
 #   # Use GNU ls if available (for macOS: `brew install coreutils`)
 #   gdircolors &>/dev/null 2>&1 && eval `gdircolors $DOTFILES/zsh/dircolors.ansi-dark` && alias ls='gls --color=auto -hF'
 #   export GREP_COLOR='1;31'
 # # }

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
#__conda_setup="$('/home/mmeehan/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
#if [ $? -eq 0 ]; then
#    eval "$__conda_setup"
#else
#    if [ -f "/home/mmeehan/miniconda3/etc/profile.d/conda.sh" ]; then
#        . "/home/mmeehan/miniconda3/etc/profile.d/conda.sh"
#    else
#        export PATH="/home/mmeehan/miniconda3/bin:$PATH"
#    fi
#fi
#unset __conda_setup
# <<< conda initialize <<<


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
